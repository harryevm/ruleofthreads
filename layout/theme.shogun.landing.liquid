{% comment %}
Auto-generated by Shogun.
This file can be re-written at any time.
{% endcomment %}

<!DOCTYPE html>
{%- liquid
  assign rtl_langs = 'ar,arc,dv,fa,ha,he,khw,ks,ku,ps,ur,yi' | split: ','
  if rtl_langs contains localization.language.iso_code
    assign lang_dir = 'rtl'
  else
    assign lang_dir = 'ltr'
  endif
-%}
<html lang="{{ request.locale.iso_code }}" dir="{{ lang_dir }}">

<head>
  
	<!-- Added by AVADA SEO Suite -->
	{% include 'avada-seo' %}
	<!-- /Added by AVADA SEO Suite -->
{% include "starapps-core" %}




  <!-- Mode 1.0.0 -->

  <title>
    {{- page_title }}{% if current_tags %}{% assign meta_tags = current_tags | join: ', ' %} &ndash; {{ 'general.meta.tags' | t: tags: meta_tags }}{% endif %}{% if current_page != 1 %} &ndash; {{ 'general.meta.page' | t: page: current_page }}{% endif %}{% unless page_title contains shop.name %} &ndash; {{ shop.name }}{% endunless -%}
  </title>

  <link rel="preload" href="{{ 'styles.css' | asset_url }}" as="style">
  {% render 'head-tag' %}

  {%- unless settings.type_base_font.system? -%}
    {%- assign base_font_semibold = settings.type_base_font | font_modify: 'weight', '600' -%}
    {%- if base_font_semibold -%}<link rel="preload" as="font" href="{{ base_font_semibold | font_url }}" type="font/woff2" crossorigin>{%- endif -%}
  {%- endunless -%}

  {%- assign base_font = settings.type_base_font -%}
  {%- assign base_font_bold = base_font | font_modify: 'weight', 'bolder' -%}
  {%- assign base_font_semibold = base_font | font_modify: 'weight', '600' -%}
  {%- assign base_font_medium = base_font | font_modify: 'weight', '500' -%}
  {%- assign base_font_italic = base_font | font_modify: 'style', 'italic' -%}
  {%- assign base_font_bold_italic = base_font_bold | font_modify: 'style', 'italic' -%}
  {%- assign heading_font = settings.type_heading_font -%}
  {%- assign logo_font = settings.type_logo_font -%}
  {%- assign nav_font = settings.type_nav_font -%}
  {%- assign nav_font_600 = nav_font | font_modify: 'weight', '600' -%}

  <style>
    {{ base_font | font_face: font_display: 'fallback' }}
    {{ base_font_bold | font_face: font_display: 'fallback' }}
    {{ base_font_semibold | font_face: font_display: 'fallback' }}
    {{ base_font_medium | font_face: font_display: 'fallback' }}
    {{ base_font_italic | font_face: font_display: 'fallback' }}
    {{ base_font_bold_italic | font_face: font_display: 'fallback' }}
    {{ heading_font | font_face: font_display: 'fallback' }}
    {{ logo_font | font_face: font_display: 'fallback' }}
    {{ nav_font | font_face: font_display: 'fallback' }}
    {{ nav_font_600 | font_face: font_display: 'fallback' }}
  </style>

  {% render 'social-meta-tags' %}

  {{ 'styles.css' | asset_url | stylesheet_tag }}
  {%- if settings.custom_css != blank -%}
    <link rel="preload" href="{{ 'custom.css' | asset_url }}" as="style">
    {{ 'custom.css' | asset_url | stylesheet_tag }}
  {%- endif -%}

  {%- if settings.swatch_enabled and settings.swatch_value_list != blank -%}
    <link rel="preload" href="{{ 'swatches.css' | asset_url }}" as="style">
    {{ 'swatches.css' | asset_url | stylesheet_tag }}
  {%- endif -%}

  <script>
    window.theme = window.theme || {};
    theme.money_format_with_product_code_preference = {% if settings.product_currency_code_enabled %}{{ shop.money_with_currency_format | json }}{% else %}{{ shop.money_format | json }}{% endif %};
    theme.money_format = {{ shop.money_format | json }};
    theme.strings = {
      previous: {{ 'general.accessibility_labels.previous' | t | json }},
      next: {{ 'general.accessibility_labels.next' | t | json }},
      addressError: {{ 'map.errors.address_error' | t | json }},
      addressNoResults: {{ 'map.errors.address_no_results' | t | json }},
      addressQueryLimit: {{ 'map.errors.address_query_limit_html' | t | json }},
      authError: {{ 'map.errors.auth_error' | t | json }},
      icon_labels_left: {{ 'general.icon_labels.left' | t | escape | json }},
      icon_labels_right: {{ 'general.icon_labels.right' | t | escape | json }},
      icon_labels_down: {{ 'general.icon_labels.down' | t | escape | json }},
      icon_labels_close: {{ 'general.icon_labels.close' | t | escape | json }},
      icon_labels_plus: {{ 'general.icon_labels.plus' | t | escape | json }},
      imageSlider: {{ 'general.slider.images' | t | json }},
      cart_terms_confirmation: {{ 'cart.terms.confirmation' | t | json }},
      cart_general_quantity_too_high: {{ 'cart.general.quantity_too_high' | t: quantity: '[QUANTITY]' | json }},
      products_listing_from: {{ 'products.listing.from' | t | json }},
      products_product_add_to_cart: {{ 'products.product.add_to_cart' | t | json }},
      products_variant_no_stock: {{ 'products.variant.no_stock' | t | json }},
      products_variant_non_existent: {{ 'products.variant.non_existent' | t | json }},
      products_product_pick_a: {{ 'products.product.pick_a' | t | json }},
      general_navigation_menu_toggle_aria_label: {{ 'general.navigation.menu_toggle_aria_label' | t | json }},
      general_accessibility_labels_close: {{ 'general.accessibility_labels.close' | t | json }},
      products_product_added_to_cart: {{ 'products.product.added_to_cart' | t | json }},
      general_quick_search_pages: {{ 'general.quick_search.pages' | t | json }},
      general_quick_search_no_results: {{ 'general.quick_search.no_results' | t | json }}
    };
    theme.routes = {
      search_url: '{{ routes.search_url }}',
      cart_url: '{{ routes.cart_url }}',
      cart_add_url: '{{ routes.cart_add_url }}.js',
      cart_change_url: '{{ routes.cart_change_url }}.js',
      cart_update_url: '{{ routes.cart_update_url }}.js',
      predictive_search_url: '{{ routes.predictive_search_url }}'
    };
    theme.settings = {
      cart_type: {{ settings.cart_type | json }},
      quickbuy_style: {{ settings.quickbuy_style | json }},
      quickbuy_visibility: {{ settings.quickbuy_visibility | json }},
      avoid_orphans: {{ settings.avoid_orphans | json }},
      qb_enable_sticky_cols: {{ settings.qb_enable_sticky_cols | json }}
    };
    document.documentElement.classList.add('js');

    theme.enqueueStyleUpdateQueue = [];
    theme.enqueueStyleUpdateTimeoutId = null;
    theme.enqueueStyleUpdate = (cb) => {
      clearTimeout(theme.enqueueStyleUpdateTimeoutId);
      theme.enqueueStyleUpdateQueue.push(cb);
      theme.enqueueStyleUpdateTimeoutId = setTimeout(() => {
        while (theme.enqueueStyleUpdateQueue.length > 0) {
          theme.enqueueStyleUpdateQueue.pop()();
        }
      }, 0);
    }
  </script>

  <script src="{{ 'vendor.min.js'  | asset_url }}" defer></script>
  <script src="{{ 'theme.js'  | asset_url }}" defer></script>

  {{ content_for_header }}

  {% render 'qikify-apps' %}

  {% render 'shogun-head' %}
	{% render 'vitals-loader' %}

{% include 'analyzify-gtm-body' %}

</head>





<body class="template-{{ template | split: '.' | first | handle }}
    {%- if template.suffix %} template-suffix-{{ template.suffix }}{% endif -%}
    {%- if settings.swatch_enabled %} swatch-method-{{ settings.swatch_method }} swatch-style-{{ settings.swatch_style }}{% endif -%}
    {%- if settings.enable_anims_image_load %} image-load-anim-enabled{% endif -%}
    " data-cc-animate-timeout="0">
  
  
  {{ content_for_layout }}
  
  <script>
      if ('IntersectionObserver' in window) {
        document.body.classList.add("cc-animate-enabled");
      }
    </script>
<script async type="text/javascript" id="stamped-script-widget" data-api-key="pubkey-GrN0g8J2CU2rQbidN3HYV9ql7B79iS" src="https://cdn1.stamped.io/files/widget.min.js"></script>
<script id="ze-snippet" src="https://static.zdassets.com/ekr/snippet.js?key=cce8bbb7-1522-4cd5-96bc-0c449812c5ea"> </script>
<script src="https://cdn.attn.tv/ruleofthreads/dtag.js"></script>
  <style type="text/css">
    body, html {
      width: 100% !important;
      background: white !important;
    }
  </style>
  
</body>

</html>

